"use strict";
const { Client, GatewayIntentBits, ActivityType } = require("discord.js");
const dotenv = require("dotenv");

<<<<<<< HEAD
// üîπ Áí∞Â¢ÉÂ§âÊï∞„Åã„Çâ„Éà„Éº„ÇØ„É≥„ÇíÂèñÂæó
const TOKEN = process.env.DISCORD_BOT_TOKEN;

// üîπ Discord „ÇØ„É©„Ç§„Ç¢„É≥„Éà„Çí‰ΩúÊàê
const client = new Client({
  intents: [
    GatewayIntentBits.Guilds, // „Çµ„Éº„Éê„ÉºÊÉÖÂ†±„ÅÆÂèñÂæó
    GatewayIntentBits.GuildMessages, // „É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÂèñÂæó
    GatewayIntentBits.MessageContent, // „É°„ÉÉ„Çª„Éº„Ç∏ÂÜÖÂÆπ„ÅÆÂèñÂæó
    GatewayIntentBits.GuildPresences, // „Éó„É¨„Çº„É≥„ÇπÔºà„Çπ„ÉÜ„Éº„Çø„ÇπÔºâ„ÅÆÂèñÂæó
  ],
});

// ‚úÖ „Éú„ÉÉ„Éà„ÅåÊ∫ñÂÇôÂÆå‰∫Ü„Åó„Åü„Å®„Åç„ÅÆÂá¶ÁêÜ
client.once("ready", () => {
  console.log(`‚úÖ Bot is online as ${client.user.tag}`);

  // üîπ Â∏∏„Å´„Ç™„É≥„É©„Ç§„É≥Áä∂ÊÖã„Å´Ë®≠ÂÆö
  client.user
    .setPresence({
      status: "online", // Â∏∏„Å´ "online" „Å´Ë®≠ÂÆö
      activities: [
        {
          name: "„Éî„É≥Áïô„ÇÅ„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÁõ£Ë¶ñ‰∏≠", // Ë°®Á§∫„Åô„Çã„Ç¢„ÇØ„ÉÜ„Ç£„Éì„ÉÜ„Ç£„ÅÆÂêçÂâç
          type: ActivityType.Watching, // "„Äá„Äá„ÇíË¶ñËÅ¥‰∏≠" „Å®Ë°®Á§∫
        },
      ],
=======
dotenv.config();

const client = new discord_js_1.Client({
    intents: [
        discord_js_1.GatewayIntentBits.Guilds,
        discord_js_1.GatewayIntentBits.GuildMessages,
        discord_js_1.GatewayIntentBits.MessageContent,
    ],
});

const TOKEN = process.env.DISCORD_BOT_TOKEN;
const REPORT_CHANNEL_IDS = process.env.REPORT_CHANNEL_IDS?.split(',').map(id => id.trim()) || [];

client.once('ready', async () => {
    console.log(`Logged in as ${client.user?.tag}!`);

    // „Çπ„ÉÜ„Éº„Çø„Çπ„ÇíÁ¢∫ÂÆü„Å´„Ç™„É≥„É©„Ç§„É≥„Å´„Åô„Çã
    setTimeout(() => {
        if (client.user) {
            client.user.setPresence({
                status: "online",
                activities: [
                    {
                        name: "„Éî„É≥Áïô„ÇÅ„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÁõ£Ë¶ñ‰∏≠",
                        type: discord_js_1.ActivityType.Watching,
                    },
                ],
            }).then(() => console.log("‚úÖ Presence „Çí„Ç™„É≥„É©„Ç§„É≥„Å´Ë®≠ÂÆö„Åó„Åæ„Åó„ÅüÔºÅ"))
              .catch(console.error);
        } else {
            console.log("User not found!");
        }
    }, 5000);
});

client.on("messageCreate", (message) => {
    if (message.author.bot) return;
    if (message.content.includes("!ping")) {
        message.reply("üèì Pong!");
    }
});

const schedules = ['* * * * *'];
schedules.forEach((schedule) => {
    cron.schedule(schedule, async () => {
        let reportMessage = '**üìå ‰ªäÊó•„ÅÆ„Éî„É≥Áïô„ÇÅ„É°„ÉÉ„Çª„Éº„Ç∏‰∏ÄË¶ß**\n';
        for (const [id, channel] of client.channels.cache) {
            if (channel instanceof discord_js_1.TextChannel) {
                const pinnedMessages = await channel.messages.fetchPinned();
                if (pinnedMessages.size > 0) {
                    reportMessage += `\n**#${channel.name}**\n`;
                    pinnedMessages.forEach((msg) => {
                        reportMessage += `- [${msg.author.username}] ${msg.content}\n`;
                    });
                }
            }
        }
        if (reportMessage.length > 2000) {
            reportMessage = reportMessage.slice(0, 1997) + '...';
        }
        for (const channelId of REPORT_CHANNEL_IDS) {
            const reportChannel = client.channels.cache.get(channelId);
            if (reportChannel) {
                await reportChannel.send(reportMessage);
            }
        }
    });
});

client.login(TOKEN)
    .then(() => {
        console.log('Bot is logged in successfully!');
>>>>>>> 44e7dbf (Discord„Å´ÂèÇÂä†„Åï„Åõ„Åü~)
    })
    .then(() => {
      console.log("‚úÖ „Çπ„ÉÜ„Éº„Çø„Çπ„Çí„Ç™„É≥„É©„Ç§„É≥„Å´Ë®≠ÂÆö„Åó„Åæ„Åó„ÅüÔºÅ");
    })
    .catch(console.error);
});

// ‚úÖ „É°„ÉÉ„Çª„Éº„Ç∏„Å´ÂèçÂøú„Åô„ÇãÂá¶ÁêÜ
import { Message } from "discord.js";

client.on("messageCreate", (message: Message) => {
  if (message.author.bot) return; // „Éú„ÉÉ„Éà„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„Å´„ÅØÂèçÂøú„Åó„Å™„ÅÑ

  if (message.content === "!ping") {
    message.reply("üèì Pong!"); // "!ping" „Å´ "Pong!" „ÅßÂøúÁ≠î
  }
});

// ‚úÖ Bot„ÅåÂàáÊñ≠„Åï„Çå„ÅüÂ†¥Âêà„Å´Ëá™ÂãïÂÜçÊé•Á∂ö
client.on("disconnect", () => {
  console.log("‚ö†Ô∏è Bot „ÅåÂàáÊñ≠„Åï„Çå„Åæ„Åó„Åü„ÄÇÂÜçÊé•Á∂ö„Åó„Åæ„Åô...");
  client.login(TOKEN);
});

// ‚úÖ Bot„Å´„É≠„Ç∞„Ç§„É≥
client
  .login(TOKEN)
  .then(() => console.log("‚úÖ Bot successfully logged in!"))
  .catch((error: unknown) => console.error("‚ùå „É≠„Ç∞„Ç§„É≥„Ç®„É©„Éº: ", error));
